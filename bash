Bash 文件测试
test：-a FILE    判断文件是否存在，文件存在则为真
      -b FILE   是一个块文件
      -c FILE   是一个字符文件
      -d FILE   文件夹
      -e FILE   文件为真，则文件存在
      -f FILE    文件存在 并是一个普通文件
      -g FILE   如果文件是set-group-id，则文件为True。
      -h FILE   如果文件是符号链接，则为真。
      -L FILE   如果文件是符号链接，则为True。-
      -k FILE   如果文件是符号链接，则为True。-
      -p FILE   如果文件是命名管道，则为True。
      -r FILE   -r文件为真，如果文件可读。
      -s FILE   如果文件存在且不为空，则文件为True。
      -S FILE   如果文件是套接字，则为True。
      -t FD    如果FD在终端上打开，则为 真
      -u FILE   真
      -w FILE   如果文件是可写的，则为真。
      -x FILE   如果文件是可执行的，则为-x文件。
      -O FILE   -O文件为真，如果该文件实际上为您所有。
      -G FILE   如果该文件实际上属于您的组，则该文件为True。
-N FILE   如果文件自上次读取以来被修改，则为真
1. 判断用户文件权限
   例：判断用户对/etc/shadow 有无读权限——更换-r判断写与执行
       [ -r /etc/shadow ] && echo ture || echo fiesa   有权限时echo出ture，无权限时echo出fiesa
       更换-r为-f判断文件是否普通文件
              为-d是否目录
 2. 与或非，并且或者
与：1 和 0 得  0
    0 和0  得  0
    0 和1  得  0
1	和1  得  1
或：1  和  0  得 1
0	和  0  得 0
1	和  1  得  1
0	和  1  得  1
非：!
异或：相同得0，不同得1
同或：相同得1，不同得0
并且：非a或非b=非（a且b）：！（ $1 -a $2 ）
或者：非a且非b=非（a或b）：！（ $1 -o $2 ）        【【】】不支持
并且和或者【【】】不支持   【【】

Find 路径 -size 大小  大小范围#-1，#   例：搜索10M {9M  10M}
              -大小      最大为#不包含#
              +大小      最小为#
1、
         -mtime  10      搜索  10天到11天得文件
          -mmin  10        单位时分钟
权限：-perm 权限数字    ：进到目录里搜
             /权限数字   ：有一个拼配就显示
/644 ： u:1.1.0拼配  u：1.1.1拼配  g：o 不看
             -权限数字:  必须都拼配
文件压缩，归档打包
在图形界面输入：
Compress：（坑浦软四）
独立压缩   -z后缀
-c  保留文件名
Uncompress：
gzip   也是压缩文件  压缩比较高






文本处理三剑客之sed
Grep   过滤文本中通过正则表达式来符合条件得行
Sed：
模式空间：自己的内存空间，sed自动将需要处理得行读入模式空间
形成一个循环
Sed：常见用法：外部命令
选型+自身脚本+目标文件
选项：‘
-n：只显示指定行
地址命令：sed 的基本格式：sed ‘地址命令‘ 文件，
对特定得行
没有地址：全部得行    p：打印两遍
但地址;  行号+p：指定行号打印2遍其他打印一边
          $：最后一行
       支持正则表达时：/正则表达式/
地址范围： 
~：步进：
1~2:从1行开始每次进2行，就是奇数行
2~2：偶数行

在地址命令中输入‘行号，行号/p’显示行号之间的内容
‘#d‘：从模拟空间中删除指定行

Sed添加文件
‘指定行数添加文件用\换行‘
Sed：编辑文件
/i：行前编辑      -i：原文编辑
/a：行后加入
/c：替换行
/文件路径：将前面指定的行加到指定文件
/n：将后文件内容中间到制定位置
/！：取反，除了指定行
Sed工具：
替换指定字符：s///
例：‘s/目标/目的/g‘  全局替换
